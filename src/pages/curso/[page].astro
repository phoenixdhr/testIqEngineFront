---
import type { GetStaticPaths } from "astro";
import slugify from "slugify";
import { clientGql } from "@graphql-astro/apolloClient";
import { CursosDocument, type Curso } from "@graphql-astro/generated/graphql";
import Layout from "@layouts/Layout.astro";
import Cards from "@components/Cards.astro";
import "@styles/global.css";


const { data } = await clientGql.query({
  query: CursosDocument,
  variables: { offset: 0, limit: 10 },
});

export const getStaticPaths = (async({paginate}) => {
  const { data } = await clientGql.query({
  query: CursosDocument,
  variables: { offset: 0, limit: 10 },
});

const cursos: Curso[] = data?.Cursos;

// const prospParams = cursos.map(curso => ({
  
//     props: {...curso},
//     params:{slugCourseTitle:  slugify(curso.courseTitle, { lower: true, strict: true })}}))

    // console.log(prospParams)
    return paginate(cursos, {pageSize: 3});
}) satisfies GetStaticPaths;

const {page } = Astro.props


const cursos: Curso[] = data?.Cursos;


---

<Layout tituloPagina="Cursos">
  <h1 class="text-2xl font-bold text-center my-6">Cat√°logo de Cursos</h1>

<section class="grid grid-cols-1 md:grid-cols-3 gap-4 px-8">
  {page.data.map((curso) => ( <Cards {...curso} isBig={false}/>  ))}
  
</section>

<section class="flex contain-content justify-center gap-4">
    <a 
    class:list={[
        "btnn",
       {
        "pointer-events-none cursor-not-allowed bg-gray-600 text-gray-400" : !Boolean(page.url.prev)
       }
    ]} 
     href=`${page.url.prev}` >Anterior </a>
    <span class="text-xl font-bold"> page {page.currentPage}</span>
    <a class:list={[
        "btnn",
       {
        "pointer-events-none cursor-not-allowed bg-gray-600 text-gray-400" : !Boolean(page.url.next)
       }
    ]} href=`${page.url.next}` >Siguiente </a>
</section>

</Layout>


<style>
    @reference "tailwindcss"


    
    
    .disablee {
        @apply bg-gray-600 text-gray-400 
    }
    
    
    .btnn {
        @apply bg-blue-500 p-2
    }


</style>


